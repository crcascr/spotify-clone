---
import Layout from "../../layouts/Layout.astro";

import { allPlaylists, songs } from "@/lib/data";
import PlaylistItemCard from "@/components/PlaylistItemCard.astro";
import PlaylistTable from "@/components/PlaylistTable.astro";
import CardPlayButton from "@/components/CardPlayButton";

const { id } = Astro.params;

const playlist = allPlaylists.find((playlist) => playlist.id === id);

const playlistSongs = songs.filter(
  (song) => song.albumId === playlist?.albumId
);

var playlistDuration = 0;
playlistSongs.map((song) => {
  const duration = song.duration.split(":");
  playlistDuration += parseInt(duration[0]) * 60 + parseInt(duration[1]);
});

function secondsToHours(seconds: number) {
  const hours = Math.floor(seconds / 3600);
  const minutes = Math.floor(seconds / 60);
  return `${hours > 0 ? `${hours} h` : ""}${minutes} min`;
}
---

<Layout title="Spotify Clone">
  <div
    id="playlist-container"
    class="relative flex flex-col h-full bg-zinc-900 overflow-x-hidden"
    transition:name=`playlist ${id} box`
  >
    <header class="flex flex-row gap-8 px-6 mt-12">
      <picture class="aspect-square w-52 h-52 flex-none">
        <img
          src={playlist?.cover}
          alt={`Cover of ${playlist?.title}`}
          class="object-cover w-full h-full shadow-lg rounded-md"
          transition:name=`playlist ${playlist?.id} image`
        />
      </picture>
      <div class="flex flex-col justify-between">
        <h2 class="flex flex-1 items-end">Playlist</h2>
        <div>
          <h1 class="font-bold block text-5xl text-white">
            {playlist?.title}
            <span transition:name=`playlist ${playlist?.id} title`></span>
          </h1>
        </div>
        <div class="flex-1 flex items-end">
          <div class="text-sm text-gray-300 font-normal">
            <div transition:name=`playlist ${playlist?.id} artist`>
              <span>{playlist?.artists.join(", ")}</span>
            </div>
            <p class="mt-1">
              <span class="text-white"
                >{playlistSongs.length}
                {playlistSongs.length === 1 ? "canci√≥n" : "canciones"}</span
              >, cerca de {secondsToHours(playlistDuration)}
            </p>
          </div>
        </div>
      </div>
    </header>
    <div class="p-6">
      <CardPlayButton id={id} client:load size="medium" />
    </div>
    <div class="relative z-10 px-6">
      <PlaylistTable songs={playlistSongs} />
    </div>
    <div
      class="absolute inset-0 bg-gradient-to-t from-zinc-900 via-zinc-900/80 -z-10"
    >
    </div>
  </div>
</Layout>

<style></style>
